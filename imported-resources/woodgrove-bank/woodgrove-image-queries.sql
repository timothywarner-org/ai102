-- Woodgrove Bank AI-102 Cosmos DB Image Metadata Queries
-- These queries are designed for Cosmos DB SQL API, targeting the image metadata documents
-- generated by the AI-102 image analysis demo. Each query is annotated for business and teaching value.

-- 1. Find all images tagged with a specific person (e.g., 'Barack Obama')
SELECT * FROM c
WHERE ARRAY_CONTAINS(c.tags, {"name": "barack obama"}, true)
-- Purpose: Retrieve all images where the Vision API detected 'Barack Obama' as a tag.
-- Business: Useful for compliance, marketing, or celebrity endorsement tracking.

-- 2. Find all images with a description containing a keyword (e.g., 'smiling')
SELECT * FROM c
WHERE CONTAINS(LOWER(c.description.text), 'smiling')
-- Purpose: Search for images with a specific mood or action in the description.
-- Business: Enables sentiment analysis or campaign curation.

-- 3. Find all images uploaded in the last 30 days
SELECT * FROM c
WHERE c.uploadDate >= GetCurrentDateTime() - 30
-- Purpose: Retrieve recent uploads for review or reporting.
-- Business: Supports audit, freshness, and trending content analysis.
-- Note: Replace GetCurrentDateTime() with the appropriate ISO date string if needed.

-- 4. Find all images containing a specific object (e.g., 'person') with high confidence
SELECT * FROM c
JOIN o IN c.objects
WHERE o.object = 'person' AND o.confidence > 0.95
-- Purpose: Filter for images where a person is confidently detected.
-- Business: Useful for HR, security, or customer engagement analytics.

-- 5. Count images by tag (top 10 tags)
SELECT TOP 10 t.name, COUNT(1) AS count
FROM c
JOIN t IN c.tags
GROUP BY t.name
ORDER BY count DESC
-- Purpose: Identify the most common tags in your image dataset.
-- Business: Supports content strategy, inventory, and AI model feedback.

-- 6. Find images with multiple specific tags (e.g., both 'bank' and 'customer')
SELECT * FROM c
WHERE ARRAY_CONTAINS(c.tags, {"name": "bank"}, true)
  AND ARRAY_CONTAINS(c.tags, {"name": "customer"}, true)
-- Purpose: Find images relevant to both banking and customer service scenarios.
-- Business: Enables targeted marketing or training dataset curation.

-- 7. Find images with objects in a specific bounding box region (advanced)
SELECT * FROM c
JOIN o IN c.objects
WHERE o.rectangle.x < 100 AND o.rectangle.y < 100
-- Purpose: Retrieve images where detected objects are in the top-left corner.
-- Business: Useful for UI/UX analysis or spatial pattern recognition.

-- 8. Find all images uploaded by a specific user or IP
SELECT * FROM c
WHERE c.uploadedBy = '127.0.0.1'
-- Purpose: Audit uploads by user or source.
-- Business: Supports compliance, security, and user engagement tracking.

-- 9. Find images with a tag confidence below a threshold (potential model errors)
SELECT * FROM c
JOIN t IN c.tags
WHERE t.confidence < 0.5
-- Purpose: Identify images where the AI model was uncertain.
-- Business: Supports model retraining, error analysis, and quality assurance.

-- 10. Aggregate: Count images per day for the last week
SELECT SUBSTRING(c.uploadDate, 0, 10) AS day, COUNT(1) AS uploads
FROM c
WHERE c.uploadDate >= '2024-05-25T00:00:00Z'
GROUP BY SUBSTRING(c.uploadDate, 0, 10)
ORDER BY day DESC
-- Purpose: Daily upload trends for reporting and dashboarding.
-- Business: Enables business intelligence, capacity planning, and campaign tracking.

-- 11. Find images with a specific tag and description keyword
SELECT * FROM c
WHERE ARRAY_CONTAINS(c.tags, {"name": "atm"}, true)
  AND CONTAINS(LOWER(c.description.text), 'outdoor')
-- Purpose: Combine tag and description search for precise content discovery.
-- Business: Useful for asset management, marketing, or compliance.

-- 12. Find images with no tags (potentially unclassified)
SELECT * FROM c
WHERE (c.tags = [] OR IS_NULL(c.tags))
-- Purpose: Identify images that the AI model could not classify.
-- Business: Supports data quality, retraining, and manual review workflows.
